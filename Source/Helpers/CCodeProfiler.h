#pragma once
#include <iostream>
using std::string;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// File: "CCodeProfiler.h"
// Author: Nick Bucciarelli (NB)
// Purpose: Checks to see how long certain functions are being called.
// 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#include <Windows.h>
#include <vector>
using std::vector;

struct functionInfo
{
	LARGE_INTEGER lnStartTime;
	string szFunctionName;
	vector<LONGLONG> times;
};

class CCodeProfiler
{
private:
	LARGE_INTEGER lnFrequency;
	vector<functionInfo*> vListOfFunctions;


	CCodeProfiler();
	~CCodeProfiler();
	CCodeProfiler(const CCodeProfiler&){}
	CCodeProfiler	& operator=(CCodeProfiler&){}
	
public:

	static CCodeProfiler* GetInstance(void) 
	{
		static CCodeProfiler instance;
		return &instance;
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"start"
	//	Last Modified:	September 22, 2008
	//	Purpose:		starts the time
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Start(string szFunctionName);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"stop"
	//	Last Modified:	September 22, 2008
	//	Purpose:		stops and writes out the time of the function calls
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Stop(string szFunctionName);
};