//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	File:			"CParticleEffectManager.h"
//	Author:			Nick Bucciarelli
//	Last Modified:	August 25, 2008
//	Purpose:		handles the particles
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once

#include "CParticleEffect.h"
#include <vector>
using std::vector;
class CParticleEffectManager
{
private:
	vector<CParticleEffect*> vParticleEffect;
	float m_fUpdateTimer;

private:
	CParticleEffectManager(void) { m_fUpdateTimer = .016f;}
	CParticleEffectManager(CParticleEffectManager &ref) {}
	CParticleEffectManager& operator=(CParticleEffectManager &ref);
	~CParticleEffectManager(void) {}
public:
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"GetInstance"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Gets the instance for the CParticleEffectManager
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	static CParticleEffectManager *GetInstance(void)
	{ static CParticleEffectManager instance; return &instance; }

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Update"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Updates the particles
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update(float fDelta);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Load Effect"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Loads the particle effect
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	int LoadEffect(char* szFileName);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Render"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Renders the effect
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Render(int nImageID, int nPosX, int nPosY, float fScaleX = 1.0f, float fScaleY = 1.0f, float fRotX = 0.0f, float fRotY = 0.0f, float fRot = 0.0f, unsigned nColor = 0XFFFFFFFF);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Play"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Plays the effect
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Play(int nImageID, bool bIsLooping);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Stop"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Stops the effect
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Stop(int nImageID);

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"Unload"
	//	Last Modified:	July 11, 2008
	//	Purpose:		Unloads the particle
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void Unload(int nImageID);
};