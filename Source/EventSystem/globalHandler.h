//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	File:		"globalHandler.h"
//	Author:		Scott Smallback (SS)
//	Purpose:	Global class for the event handler
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include "listener.h"

class eventManager;
class game;
class gameState;

class globalHandler : public listener
{
protected:
	eventManager* EM;
	game* theGame;

	gameState* state(int);

	globalHandler();
	globalHandler(const globalHandler&);
	globalHandler& operator=(const globalHandler&);
	~globalHandler();
public:
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"getInstance"
	//	Last Modified:	August 25, 2008
	//	Purpose:		Gets the instance of the singleton
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	static globalHandler* getInstance();
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"initialize"
	//	Last Modified:	August 25, 2008
	//	Purpose:		Initializes the global handler class
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void initialize();

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"shutdown"
	//	Last Modified:	August 25, 2008
	//	Purpose:		Shuts down the global handler
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void shutdown();

	//////////////////////////////////////////////////////////////////////////////////////////////////////
	//	Function:		"HandleEvent"
	//	Last Modified:	August 25, 2008
	//	Purpose:		Handles the event of this class
	//////////////////////////////////////////////////////////////////////////////////////////////////////
	void HandleEvent(gameEvent* ev);
};